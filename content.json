{"meta":{"title":"Hexo","subtitle":"","description":"","author":"雀栎","url":"http://example.com","root":"/"},"pages":[{"title":"关于","date":"2024-03-01T09:11:31.857Z","updated":"2024-03-01T09:06:07.016Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2024-03-01T09:08:35.387Z","updated":"2024-03-01T09:08:35.387Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"友链","date":"2024-03-01T08:44:12.995Z","updated":"2024-03-01T08:44:12.995Z","comments":true,"path":"links/index.html","permalink":"http://example.com/links/index.html","excerpt":"","text":""},{"title":"项目","date":"2024-03-01T11:31:16.590Z","updated":"2024-03-01T11:31:16.590Z","comments":true,"path":"repository/index.html","permalink":"http://example.com/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2024-03-01T08:43:07.828Z","updated":"2024-03-01T08:43:07.828Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"PyQt5简单入门——实现伪装目标检测","slug":"PyQt简单入门知识点-实现伪装目标检测","date":"2023-03-26T16:00:00.000Z","updated":"2024-03-01T16:14:15.798Z","comments":true,"path":"2023/03/27/PyQt简单入门知识点-实现伪装目标检测/","permalink":"http://example.com/2023/03/27/PyQt%E7%AE%80%E5%8D%95%E5%85%A5%E9%97%A8%E7%9F%A5%E8%AF%86%E7%82%B9-%E5%AE%9E%E7%8E%B0%E4%BC%AA%E8%A3%85%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/","excerpt":"","text":"毕业设计其中一个环节是为伪装目标检测算法设计一个用户界面，实现选择图片或拍照上传原始图片，显示伪装目标检测结果，并且可以保存。 之前没有使用过Qt绘制界面编写代码，下面大致记录一下基本的使用方法。 前端界面绘制 安装流程可以参考：VSCode配置PyQt5过程 新建ui文件 可以在VSCode工作区 右击-&gt;PYQT: New Form ，也可以在QtDesigner中新建ui文件。 对于已经存在的ui文件可以 右击-&gt;PYQT: Edit in Designer ，也可以在QtDesigner中打开。 基本绘制 模块介绍 以下是QtDesigner的主界面，主要包括以下几个部分： 组件工具箱：此处有很多可以使用的组件，根据需求可以直接拖拽至窗口中。 页面主体操作区：用户可以在此区域进行窗口界面绘制，调整位置大小等。 对象查看器：在这个区域可以看到该窗口中的所有对象及其包含关系，并对其进行删除、重命名等操作。 属性编辑器：在这个区域可以对所选对象进行具体属性的编辑，例如宽高、坐标、字体样式等。 信号和槽编辑器：该部分主要用于将前端和后端业务逻辑进行关联，前端发出信号，后端的槽函数做出反应。 布局 可以将多个组件关联为一个layout组，用于方便我们的布局。 首先选中所要关联的组件，例如我选中下方的五个button。 其次点击左上角的水平布局（除此之外还有垂直布局、栅格布局等）。 在对象查看器中即可看到这些组件归到一个layout组下。 在属性编辑器中可以对该布局进行操作，例如上下左右的margin（留白）和组件之间的padding（边距）属性。 img 水平布局的button组件往往是非常的扁的（高根据字体大小适应），若要调节其高，可以在组件的属性中限制其最小高度。（相应地，在垂直布局中限制最小宽度） 样式 因为这次的界面比较简单，没有非常复杂的设计，所以我的页面设计均在DtDesigner中进行，并未直接在代码中添加。 具体流程如下： 选中组件-&gt;右击-&gt;改变样式表 编写修改属性的代码 我分别修改了背景颜色、文字颜色、按钮圆角和图标的本地路径。以及当鼠标悬浮在按钮上时的背景颜色。 按钮的图标大小可以在button组件的属性中找到iconSize进行修改，图标和文字的位置Qt可以自动调节，如果需要其他复杂布局可以网络搜索。 各种图标的下载可以去iconfont 其他 如果需要禁止用户拖拽窗口大小，可以在窗口的属性中修改minimumSize和maxmumSize为当前窗口大小，则最大化按钮和窗口拖拽失效。 如果窗口为MainWindow类型，且不需要上下的状态栏和菜单栏可以在右侧的对象查看器中右击移除。 如果需要给应用程序添加一个图标，如图所示，则可以在窗口组件的属性中，上传本地图片作为图标。 img 添加函数 要与后端交互，需要为组件添加槽函数，我这里只用到了button和且只用到了它的单击操作（clicked()），流程如下： 点击工具栏中的 编辑信号/槽，即可进入信号和槽的编辑模式。 左键长按需要添加函数的组件并将其拖拽至空白处会出现配置连接窗口。 点击单机信号（clicked()）后点击右侧的编辑，编辑槽函数。 点击加号添加自定义函数并重命名。 添加后点击确定。 img 点击新建的槽函数，并确定。 即可看到该按钮的clicked()信号关联了一个名为my_func()的槽函数。 槽函数创建完成。 后端逻辑编码 绘制好界面后，将ui文件保存至工作区文件夹中，系统会自动将其编译为py文件，如果为编译，可以 右击-&gt;PYQT: Compile Form 进行编译。 新建类 创建一个py文件作为主程序文件，因为代码较少，我将两个窗口类（MainWindow、CameraWindow）和main函数都定义在了main.py中。 具体类结构如下，其中的函数均为我们定义的槽函数。 主函数 编写主函数，显示主窗口。 12345if __name__ == &quot;__main__&quot;: app = QApplication([]) window = MainWindow() window.show() app.exec_() 具体代码 实现所需功能的具体函数代码不具有普适性和参考价值，只留作个人记录回顾。 代码地址：github仓库 最终呈现效果如下： img","categories":[{"name":"实例","slug":"实例","permalink":"http://example.com/categories/%E5%AE%9E%E4%BE%8B/"}],"tags":[{"name":"PyQt5","slug":"PyQt5","permalink":"http://example.com/tags/PyQt5/"}]},{"title":"ChatGPT注册使用流程","slug":"ChatGPT注册使用流程","date":"2023-03-23T16:00:00.000Z","updated":"2024-03-01T16:12:46.818Z","comments":true,"path":"2023/03/24/ChatGPT注册使用流程/","permalink":"http://example.com/2023/03/24/ChatGPT%E6%B3%A8%E5%86%8C%E4%BD%BF%E7%94%A8%E6%B5%81%E7%A8%8B/","excerpt":"","text":"今年可以称之为ChatGPT元年，它综合了网络上的各种信息，不仅是一种有趣的消遣工具，也可以给我们的学习生活带来很多便利，下面我将记录ChatGPT的注册使用流程。 科学上网 ChatGPT不支持在中国大陆使用，所以需要科学上网，该部分不再赘述，可以在网络上进行购买使用。 购买虚拟号码 因为在注册时需要非中国大陆地区或国家的短信验证码，需要购买虚拟号码。 可以选择在sms-activate购买。 注册后在左侧列表中选择OpenAI，其下的列表中有很多不同的国家可以选择，后面标有价格，可以任选其一。 img 在购买之前需要点击右上角的余额进行充值，可以根据选择的服务价格进行充值（该网站有最低充值额度限制）。 img img 在充值完成后，可以点击所选服务价格后的购物车图标进行购买，即可显示电话号码，之后获得的验证码也会在该页面显示，如果想要取消购买或一直未收到验证码，可以点击右侧的叉退款。 img 注册ChatGPT 在ChatGPT登录界面点击Sign up注册，创建账号时我选择的是直接使用Google邮箱账号登录。 之后会要求验证邮箱地址和手机号码，填写验证码，此处就复制之前购买的号码，等待一段时间后就可以得到验证码，输入后即注册成功可以使用了。 img","categories":[{"name":"工具","slug":"工具","permalink":"http://example.com/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"ChatGPT","slug":"ChatGPT","permalink":"http://example.com/tags/ChatGPT/"}]},{"title":"VSCode配置PyQt5过程","slug":"VSCode配置PyQt5过程","date":"2023-03-23T16:00:00.000Z","updated":"2024-03-01T16:14:26.399Z","comments":true,"path":"2023/03/24/VSCode配置PyQt5过程/","permalink":"http://example.com/2023/03/24/VSCode%E9%85%8D%E7%BD%AEPyQt5%E8%BF%87%E7%A8%8B/","excerpt":"","text":"在毕业设计中，我需要使用PyQt5绘制简单的用户界面，所以准备在VSCode中配置PyQt5，步骤如下。 安装PyQt5组件 在命令行中执行如下命令进行安装： 12pip install PyQt5pip install PyQt5-tools 在VSCode中配置PyQt5插件 选择python解释器 在 管理 -&gt; 命令面板 中输入Python: 选择解释器，点击即可进行选择，我选择的是Python 3.8.7。 安装PYQT Integration 在扩展中搜索 PYQT Integration 并点击安装（我已安装所以显示为卸载）。 img 配置PYQT Integration 点击 管理 -&gt; 扩展设置 设置Pyuic和Qtdesigner的路径，可以搜索本地 pyuic5.exe 和 designer.exe 的路径，我的地址为（星号为我的用户名）： 12C:\\Users\\*****\\AppData\\Roaming\\Python\\Python38\\Scripts\\pyuic5.exeC:\\Users\\*****\\AppData\\Roaming\\Python\\Python38\\site-packages\\qt5_applications\\Qt\\bin\\designer.exe 创建PyQt文件 新建一个工作区文件夹，在资源管理器空白处右击选择 PYQT: New From，即可打开 QtDesigner，选择 Main Window 新建一个窗口。 img 在页面中随意拖拽几个控件，点击保存到该文件夹，文件格式为（*.ui）。 img 在文件夹中右击选择 PYQT: Compile Form，即可将该文件编译为（*.py）文件。 为了显示界面，需要新建一个 main.py 文件，编写如下代码（未包含业务逻辑代码）： 1234567891011121314151617181920from PyQt5 import QtWidgets, QtGuifrom ui_test import Ui_MainWindowclass MainWindow(QtWidgets.QMainWindow): def __init__(self): super(MainWindow, self).__init__() # 实例化由PyQt Designer生成的界面类 self.ui = Ui_MainWindow() # 设置界面 self.ui.setupUi(self)if __name__ == &quot;__main__&quot;: # 创建QApplication对象 app = QtWidgets.QApplication([]) # 实例化主窗口类 window = MainWindow() # 显示主窗口 window.show() # 运行主循环 app.exec_() 运行该文件，即可显示界面。 img","categories":[{"name":"工具","slug":"工具","permalink":"http://example.com/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"PyQt5","slug":"PyQt5","permalink":"http://example.com/tags/PyQt5/"},{"name":"VSCode","slug":"VSCode","permalink":"http://example.com/tags/VSCode/"}]},{"title":"使用AutoDL训练深度学习模型流程","slug":"使用AutoDL训练深度学习模型流程","date":"2023-03-23T16:00:00.000Z","updated":"2024-03-01T16:14:36.339Z","comments":true,"path":"2023/03/24/使用AutoDL训练深度学习模型流程/","permalink":"http://example.com/2023/03/24/%E4%BD%BF%E7%94%A8AutoDL%E8%AE%AD%E7%BB%83%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B%E6%B5%81%E7%A8%8B/","excerpt":"","text":"租GPU 在AutoDL官网选择符合要求的GPU，因为我的需求不高且资金不充裕所以选择按量计费，镜像选择和代码模型匹配的版本。 img img 在容器实例中点击 JupyterLab -&gt; 终端 即可打开服务器。 img 运行代码 准备数据集和模型代码 将数据集dataset和模型model打包成（*.zip）文件，拖拽到服务器中，右下方的正在上传进度条满之后表示上传成功。 img 解压代码 使用以下命令安装并设置arc工具，用于创建、提取、查看和修改不同类型的压缩文件（如.tar、.zip等）。 1curl -L -o /usr/bin/arc http://autodl-public.ks3-cn-beijing.ksyun.com/tool/arc &amp;&amp; chmod +x /usr/bin/arc 使用以下命令解压上传的压缩包。 1arc decompress models.zip 运行代码 使用如下命令执行py文件。 1python test.py 如果代码运行需要下载额外的包可以通过pip安装。 生成的文件可以 右击 -&gt; 下载 来下载到本地。 关机 使用完毕之后，在容器实例中点击关机，结束计时。","categories":[{"name":"工具","slug":"工具","permalink":"http://example.com/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"AutoDL","slug":"AutoDL","permalink":"http://example.com/tags/AutoDL/"}]},{"title":"Markdown基本语法","slug":"Markdown基本语法","date":"2022-06-30T16:00:00.000Z","updated":"2024-03-01T16:14:04.548Z","comments":true,"path":"2022/07/01/Markdown基本语法/","permalink":"http://example.com/2022/07/01/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/","excerpt":"","text":"Markdown是一种纯文本格式的标记语言，通过简单的标记语法，可以使普通文本内容具有一定的格式，要想经营好自己的个人博客，对Markdown基础语法的掌握是必不可少的，文本对一些常用语法进行记录，便于后续使用中的回顾与查询。 一、标题 标题通过添加#符号进行实现，#的个数表示标题的级数，支持六级标题。 语法如下： 123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 效果如下： 一级标题 二级标题 三级标题 四级标题 五级标题 六级标题 二、字体 加粗： 将要加粗的文字左右分别用两个*包起来。 倾斜： 将要倾斜的文字左右分别用一个*包起来。 倾斜加粗： 将要倾斜加粗的文字左右分别用三个*包起来。 删除线： 将要添加删除线的文字左右分别用两个~包起来。 高亮： 将要高亮的文字左右分别用两个=包起来。 键盘文字： 将键盘文字作用分别用&lt;kbd&gt;和&lt;&gt;包起来。 下划线： 下划线通过html的&lt;u&gt;标签实现。 上标： 上标通过html的&lt;sup&gt;标签实现。 下标： 下标通过html的&lt;sub&gt;标签实现。 语法如下： 123456789**这是加粗的文字***这是倾斜的文字****这是倾斜加粗的文字***~~这是添加删除线的文字~~==这是要高亮的文字==复制文本的命令为：&lt;kbd&gt;ctrl&lt;/kbd&gt; + &lt;kbd&gt;c&lt;/kbd&gt;&lt;u&gt;这是带下划线的文字&lt;/u&gt;这是&lt;sup&gt;上标&lt;/sup&gt;这是&lt;sub&gt;下标&lt;/sub&gt; 效果如下： ​ 这是加粗的文字 ​ 这是倾斜的文字 ​ 这是倾斜加粗的文字*** ​ 这是添加删除线的文字 ​ ==这是要高亮的文字== ​ 复制文本的命令为：ctrl + c ​ 这是带下划线的文字 ​ 这是上标 ​ 这是下标 三、区块引用 区块引用是在段落开头使用&gt;符号，其后紧跟一个空格符号，区块引用可以嵌套，一个&gt;符号是最外层，两个&gt;符号是第一层嵌套，以此类推。 语法如下： 1234&gt; 区块引用 &gt; 最外层&gt; &gt; 第一层嵌套&gt; &gt; &gt; 第二层嵌套 效果如下： 区块引用 最外层 &gt; 第一层嵌套 &gt; &gt; &gt; 第二层嵌套 四、列表 （一）一般列表 Markdown支持有序列表和无序列表。无序列表用星号（*）、加号（+）或减号（-）作为列表标记，符号后跟一空格，再填写内容。有序列表使用数字加一个.号实现，后跟空格。除此之外还有检查列表。 语法如下： 123456789101112131415161718* 第一项* 第二项* 第三项+ 第一项+ 第二项+ 第三项- 第一项- 第二项- 第三项1. 第一项2. 第二项3. 第三项- [ ] 计划任务- [x] 完成任务 效果如下： 第一项 第二项 第三项 第一项 第二项 第三项 第一项 第二项 第三项 第一项 第二项 第三项 计划任务 完成任务 （二）列表嵌套 列表嵌套只需要在子列表中的选项前添加四个空格即可。 语法如下： 123456789101112131415* 第一项 + 第一项的第一个元素 - 第一个元素的第一个元素 + 第一项的第二个元素* 第二项 + 第二项的第一个元素 - 第一个元素的第一个元素1. 第一项 1. 第一项的第一个元素 1. 第一个元素的第一个元素 2. 第一项的第二个元素2. 第二项 1. 第二项的第一个元素 1. 第一个元素的第一个元素 效果如下： 第一项 第一项的第一个元素 第一个元素的第一个元素 第一项的第二个元素 第二项 第二项的第一个元素 第一个元素的第一个元素 第一项 第一项的第一个元素 第一个元素的第一个元素 第一项的第二个元素 第二项 第二项的第一个元素 第一个元素的第一个元素 五、代码 行内代码： 如果是段落上的一个函数或片段可以用单引号将其包起来（`）。 段落代码： 如果是单独的一段代码，用三个反引号（```）将其包裹，同时可以在开始的三个反引号后指定某一种语言。 语法如下： 12345678910这是打印函数`printf()` 这是函数片段： ```cpp （指定代码语言）#include &lt;iostream&gt;using namespace std;int main() &#123; cout &lt;&lt; &quot;hello world&quot; &lt;&lt; endl; return 0;&#125;``` (用反引号包裹代码) 效果如下： 这是打印函数printf() 这是函数片段： 123456#include &lt;iostream&gt;using namespace std;int main() &#123; cout &lt;&lt; &quot;hello world&quot; &lt;&lt; endl; return 0;&#125; 常用程序标识关键字： 语言 关键字 C cpp , c Java java Python py , python PHP php Shell bash , shell C# c# , c-sharp , csharp CSS css JavaScript js , jscript , javascript text text , plain XML xml , xhtml , xslt , html R r , s , splus GO go , golang AppleScript applescript ActionScript 3.0 actionscript3 , as3 ColdFusion coldfusion , cf Delphi delphi , pascal , pas diff&amp;patch diff patch Erlang erl , erlang Groovy groovy JavaFX jfx , javafx Perl perl , pl , Perl Ruby ruby , rails , ror , rb SASS&amp;SCSS sass , scss Scala scala SQL sql Visual Basic vb , vbnet Objective C objc , obj-c F# f# f-sharp , fsharp matlab matlab swift swift 六、链接 链接名称为显示文字，链接title为鼠标悬浮显示文字。 语法如下： 123456[链接名称](链接地址 &quot;链接title&quot;) [链接名称](链接地址 &#x27;链接title&#x27;) [链接名称](链接地址 (链接title)) 例：这是百度首页：[点此进入](https://www.baidu.com/ &#x27;欢迎使用百度搜索&#x27;) 效果如下： 这是百度首页：点此进入 七、图片 图片url可以是本地，也可以是网络，图片描述可以不写，图片title为鼠标悬停显示文字。图片默认居中，markdown无法调整大小，如有需要，可以使用标签。 语法如下： 12345![图片描述](图片url &#x27;图片title&#x27;)例：![测试图片](https://skylark-blog.oss-cn-beijing.aliyuncs.com/img/test.jpg &#x27;这是一张测试图片&#x27;)&lt;img src=&quot;https://skylark-blog.oss-cn-beijing.aliyuncs.com/img/test.jpg&quot; width=&quot;200&quot;&gt; 效果如下： 测试图片 img 八、分割线 可以在一行中使用三个及以上的星号、减号、下划线建立分割线，同行内不能有其他内容，可以在星号或减号中添加空格。 语法如下： 123456* * ******- - - ----_ _ _ _ ____ 效果如下： * * ** - - - - --- _ _ _ _ __ 九、表格 表格使用 | 来分隔不同的单元格，使用-来分隔表头和其他行。可以设置表格的对齐方式： -: 设置内容和标题栏右对齐 :- 设置内容和标题栏左对齐 :-: 设置内容和标题栏居中对齐 语法如下： 12345678910| 表头 | 表头 | 表头 || :--- | :---: | ---: || 单元格 | 单元格 | 单元格 || 单元格 | 单元格 | 单元格 |可简化为：表头 | 表头 | 表头:-: | :-: | :-:单元格 | 单元格 | 单元格单元格 | 单元格 | 单元格 效果如下： 表头 表头 表头 单元格 单元格 单元格 单元格 单元格 单元格 表头 表头 表头 单元格 单元格 单元格 单元格 单元格 单元格 十、空格 不换行空格。 半角空格，为字体宽度一半。 全角空格，等于字体宽度。 语法如下： 123空格&amp;nbsp;不换行空格 空格&amp;ensp;半角空格 空格&amp;emsp;全角空格 该主题未实现空格显示，所以不做效果演示。 十一、回车 在前一行末尾敲两个空格，实现换行。 使用标签，实现换行。 在两行之间加一空行，实现换行且两行间有一空行。 语法如下： 123456789这是第一行 这是第二行这是第一行这是第二行这是第一行&lt;br/&gt;这是第二行 效果如下： 这是第一行 这是第二行 这是第一行 这是第二行 这是第一行 这是第二行 十二、反斜杠 markdown中可以通过反斜杠实现转义，即将有特殊含义的符号作为普通符号显示出来。 语法如下： 12\\\\ \\# 效果如下： #","categories":[{"name":"工具","slug":"工具","permalink":"http://example.com/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://example.com/tags/markdown/"}]},{"title":"Markdown插入公式","slug":"Markdown插入公式","date":"2022-06-30T16:00:00.000Z","updated":"2024-03-01T17:21:07.001Z","comments":true,"path":"2022/07/01/Markdown插入公式/","permalink":"http://example.com/2022/07/01/Markdown%E6%8F%92%E5%85%A5%E5%85%AC%E5%BC%8F/","excerpt":"","text":"如何插入公式 行内公式：语法：$公式内容$，如：$xyz$，即 独行公式：语法：$$公式内容$$，如：$$xyz$$，即 上标、下标与组合 上标符号：语法^，如$x^2$，即 下标符号：语法_，如$x_2$，即 组合符号：语法{}，如$x_{12}$，即 汉字、字体与格式 字体控制：语法\\displaystyle，加了之后公式会变大，如$\\displaystyle \\frac{x+y}{y+z}$，比大 下划线：语法\\underline，如$\\underline{x+y}$，即 上大括号：语法\\overbrace{算式}，如$\\overbrace{a+b+c+d}^{2.0}$，即 下大括号：语法\\underbrace{算式}，如$a+\\underbrace{b+c}_{1.0}+d$，即 上位符号：语法\\stacrel{上位符号}{基位符号}，如$x\\stackrel{\\mathrm{def}}{=}{x_1,\\dots,x_n}$，即 下位符号：语法\\underset{下位符号}{基位符号}，如$\\arg \\underset{\\theta}{\\max}$，即 占位符 quad空格（1em）：语法\\quad，如$x \\quad y$，即 两个quad空格（2em）：语法\\qquad，如$x \\qquad y$，即 大空格（5/18em）：语法\\，如$x \\ y $，即 中空格（4/18em）：语法\\:，如$x \\: y$，即 小空格（3/18em）：语法\\,，如$x \\, y$，即 紧贴（-3/18em）：语法\\!，如$x \\! y$，即 定界符与组合 符号名 格式 示例 展示结果 括号 \\描述(…\\描述) (),\\big(x\\big),\\bigg(x\\bigg) 中括号 […] [x] 大括号 \\\\{…\\\\} 或 \\lbrace... \\rbrace \\\\{x\\\\} \\lbrace x \\rbrace 尖括号 \\langle ... \\rangle \\langle x \\rangle 绝对值 \\lvert ... \\rvert \\lvert x \\rvert 范数 \\lVert ... \\rVert \\lVert x \\rVert 自适应括号 \\left( \\right) \\left(x\\right) 组合公式 {上位公式 \\choose 下位公式} {n+1 \\choose k}={n \\choose k}+{n \\choose k-1} 组合公式 {上位公式 \\atop 下位公式} {n+1 \\atop k}={n \\atop k}+{n \\atop k-1} 向上取整 $\\lceil ... \\rceil$ $\\lceil x \\rceil$ 向下取整 $\\lfloor ... \\rfloor$ $\\lfloor x \\rfloor$ 注：括号部分，big还可以换成Big，bigg，Bigg，括号会逐渐增大 四则运算 符号名 格式 示例 展示结果 加号 + x+y 减号 - x-y 加减 \\pm x \\pm y 减加 \\mp x \\mp y 乘法 \\times x \\times y 星乘 \\ast x \\ast y 点乘 \\cdot x \\cdot y 除法 \\div x \\div y 斜除 / x / y 分式 \\frac{分子}{分母} \\frac{x}{y} 分式 {分子}\\over{分母}} {x}\\over{y} 连分数： \\frac 1$$x=a_0 + \\frac {1^2}{a_1 + \\frac {2^2}{a_2 + \\frac {3^2}{a_3 + \\frac {4^2}{a_4 + ...}}}}$$ \\cfrac 1$$x=a_0 + \\cfrac {1^2}{a_1 + \\cfrac {2^2}{a_2 + \\cfrac {3^2}{a_3 + \\cfrac {4^2}{a_4 + ...}}}}$$ 高级运算 符号 语法 示例 效果 平均数 \\overline{…} \\overline{x_1,x_2,\\cdots,x_n} 开平方 \\sprt{被开方数} \\sqrt{x+y} 开放 \\sprt[开方数]{被开方数} \\sqrt[3]{x+y} 对数 \\log{} \\log_{a}^{b} 对数 \\ln{} \\ln{a + b} 对数 \\lg{} \\lg{a + b} 极限 \\lim{} \\lim^{x \\to \\infty}_{y \\to 0}{\\frac{x}{y}} 极限 \\displaystyle \\lim{} \\displaystyle \\lim^{x \\to \\infty}_{y \\to 0}{\\frac{x}{y}} 求和 \\sum{} \\sum^{x \\to \\infty}_{y \\to 0}{\\frac{x}{y}} 求和 \\displaystyle \\sum{} \\displaystyle \\sum^{x \\to \\infty}_{y \\to 0}{\\frac{x}{y}} 积分 \\int{} \\int^{\\infty}_{0}{xdx} \\iint \\iiint 积分 \\displaystyle \\int{} \\displaystyle \\int^{\\infty}_{0}{xdx} 曲线积分 \\oint \\oint{xdx} 梯度 \\nabla \\nabla 微分 \\partial{} \\frac{\\partial x}{\\partial y} 连乘 \\prod{} \\prod {a+b} \\prod_{i=1}^{K} \\prod_{i=1}^{K} 表格 语法：\\begin{array}{列样式}…\\end{array}，clr表示居中、左、右对齐，|表示一条竖线，\\表示行分隔，&amp;表示列分隔，\\hline表示在本行前加一条直线。 123456789$$\\begin{array}{c|lcr}n &amp; \\text{Left} &amp; \\text{Center} &amp; \\text{Right} \\\\\\hline1 &amp; 0.24 &amp; 1 &amp; 125 \\\\2 &amp; -1 &amp; 189 &amp; -8 \\\\3 &amp; -20 &amp; 2000 &amp; 1+10i \\\\\\end{array}$$ 矩阵 $$\\begin{matrix}…\\end{matrix}$$，使用&amp;分隔同行元素，。如： 1234567$$ \\begin{matrix} 1 &amp; x &amp; x^2 \\\\ 1 &amp; y &amp; y^2 \\\\ 1 &amp; z &amp; z^2 \\\\ \\end{matrix}$$ 括号： 如果要对矩阵加括号，可以像上文中提到的一样，使用\\left与\\right 配合表示括号符号。也可以使用特殊的matrix 。即替换\\begin{matrix}…\\end{matrix} 中matrix 为pmatrix ，bmatrix ，Bmatrix ，vmatrix , Vmatrix 。 pmatrix$\\begin{pmatrix}1 &amp; 2 \\\\ 3 &amp; 4\\\\ \\end{pmatrix}$： bmatrix$\\begin{bmatrix}1 &amp; 2 \\\\ 3 &amp; 4\\\\ \\end{bmatrix}$： Bmatrix$\\begin{Bmatrix}1 &amp; 2 \\\\ 3 &amp; 4\\\\ \\end{Bmatrix}$： vmatrix$\\begin{vmatrix}1 &amp; 2 \\\\ 3 &amp; 4\\\\ \\end{vmatrix}$： Vmatrix$\\begin{Vmatrix}1 &amp; 2 \\\\ 3 &amp; 4\\\\ \\end{Vmatrix}$： 元素省略： 可以使用\\cdots ：，\\ddots：，\\vdots： 来省略矩阵中的元素，如： 12345678$$\\begin{pmatrix}1&amp;a_1&amp;a_1^2&amp;\\cdots&amp;a_1^n\\\\1&amp;a_2&amp;a_2^2&amp;\\cdots&amp;a_2^n\\\\\\vdots&amp;\\vdots&amp;\\vdots&amp;\\ddots&amp;\\vdots\\\\1&amp;a_m&amp;a_m^2&amp;\\cdots&amp;a_m^n\\\\\\end{pmatrix}$$ 增广矩阵： 增广矩阵需要使用前面的表格中使用到的\\begin{array} ... \\end{array}来实现。 1234567$$\\left[ \\begin{array} {c c | c} %这里的c表示数组中元素对其方式：c居中、r右对齐、l左对齐，竖线表示2、3列间插入竖线1 &amp; 2 &amp; 3 \\\\\\hline %插入横线，如果去掉\\hline就是增广矩阵4 &amp; 5 &amp; 6\\end{array} \\right]$$ 逻辑运算 等于运算，符号：=，如：$x+y=z$， 大于运算，符号：&gt;，如：$x+y&gt;z$， 小于运算，符号：&lt;，如：$x+y&lt;z$， 大于等于运算，符号：\\geq，如：$x+y \\geq z$， 小于等于运算，符号：\\leq，如：$x+y \\leq z$， 不等于运算，符号：\\neq，如：$x+y \\neq z$， 不大于等于运算，符号：\\ngeq，如：$x+y \\ngeq z$， 不大于等于运算，符号：\\not\\geq，如：$x+y \\not\\geq z$， 不小于等于运算，符号：\\nleq，如：$x+y \\nleq z$， 不小于等于运算，符号：\\not\\leq，如：$x+y \\not\\leq z$， 约等于运算，符号：\\approx，如：$x+y \\approx z$， 相似运算，符号：\\sim，如：$x \\sim y$， 恒定等于运算，符号：\\equiv，如：$x+y \\equiv z$， 拓扑关系运算，符号：\\prec，如$x+y \\prec z$， 集合运算 属于运算，符号：\\in，如：$x \\in y$， 不属于运算，符号：\\notin，如：$x \\notin y$， 不属于运算，符号：\\not\\in，如：$x \\not\\in y$， 子集运算，符号：\\subset，如：$x \\subset y$， 子集运算，符号：\\supset，如：$x \\supset y$， 真子集运算，符号：\\subseteq，如：$x \\subseteq y$， 非真子集运算，符号：\\subsetneq，如：$x \\subsetneq y$， 真子集运算，符号：\\supseteq，如：$x \\supseteq y$， 非真子集运算，符号：\\supsetneq，如：$x \\supsetneq y$， 非子集运算，符号：\\not\\subset，如：$x \\not\\subset y$， 非子集运算，符号：\\not\\supset，如：$x \\not\\supset y$， 并集运算，符号：\\cup，如：$x \\cup y$ $x \\bigcup y$， 交集运算，符号：\\cap，如：$x \\cap y$ $x \\bigcap y$， 差集运算，符号：\\setminus，如：$x \\setminus y$， 同或运算，符号：\\bigodot，如：$x \\bigodot y$， 同与运算，符号：\\bigotimes，如：$x \\bigotimes y$， 实数集合，符号：\\mathbb{R}，如：$\\mathbb{R}$， 自然数集合，符号：\\mathbb{Z}，如：$\\mathbb{Z}$， 空集，符号：\\emptyset，如：$\\emptyset$， 数学符号 无穷，符号：\\infty，如： 虚数，符号：\\imath，如： 虚数，符号：\\jmath，如： 数学符号，符号\\hat{a}，如： 数学符号，符号\\widehat{ab}，如： 数学符号，符号\\check{a}，如： 数学符号，符号\\breve{a}，如： 数学符号，符号\\tilde{a}，如： 数学符号，符号\\bar{a}，如： 矢量符号，符号\\vec{a}，如： 向量符号，符号\\overrightarrow{xy}，如： 数学符号，符号\\acute{a}，如： 数学符号，符号\\grave{a}，如： 数学符号，符号\\mathring{a}，如： 一阶导数符号，符号\\dot{a}，如： 二阶导数符号，符号\\ddot{a}，如： \\dot {\\dot x}， 上箭头，符号：\\uparrow，如： 上箭头，符号：\\Uparrow，如： 下箭头，符号：\\downarrow，如： 下箭头，符号：\\Downarrow，如： 左箭头，符号：\\leftarrow，如： 左箭头，符号：\\Leftarrow，如： 右箭头，符号：\\rightarrow，如： 右箭头，符号：\\Rightarrow，如： 左右箭头，符号：\\leftrightarrow，如： 左右箭头，符号：\\Leftrightarrow，如： 上下箭头，符号：\\updownarrow，如： 上下箭头，符号：\\Updownarrow，如： 底端对齐的省略号（位置较低），符号：\\ldots，如： 中线对齐的省略号（位置居中），符号：\\cdots，如： 竖直对齐的省略号，符号：\\vdots，如： 斜对齐的省略号，符号：\\ddots，如： 三角函数sin，符号：\\sin，如： 三角函数cos，符号：\\cos，如： 三角函数tan，符号：\\tan，如： 三角函数arcsin，符号：\\arcsin，如： 三角函数arccos，符号：\\arccos，如： 三角函数arctan，符号：\\arctan，如： 三角函数cot，符号：\\cot，如： 三角函数sec，符号：\\sec，如： 三角函数csc，符号：\\csc，如： 垂直符号，符号：\\bot，如： 角度符号，符号：\\angle，如： 度数符号，符号：\\circ，如：40^\\circ， 模运算，符号：\\pomd，如：a \\equiv b \\pmod n， 因为，符号：\\because，如： 所以，符号：\\therefore，如： 逻辑运算符 \\land： \\lor： \\bigwedge： \\bigvee： \\lnot： \\forall： \\exists： \\top： \\bot： \\vdash： \\vDash： 操作符 \\star： \\ast： \\circ： \\bullet： \\bigcirc： \\oslash： \\odot： \\oplus： \\ominus： \\otimes： \\bigtriangleup： \\bigtriangledown： \\triangleleft： \\triangleright： 其他符号补充 范围 \\infty： \\aleph_o： \\nabla： \\Im： \\Re： 希腊字母 字母 实现 字母 实现 A \\alpha B \\beta \\Gamma \\gamma \\Delta \\delta E \\epsilon Z \\zeta H \\eta \\Theta \\theta I \\iota K \\kappa \\Lambda \\lambda M \\mu N \\nu \\Xi \\xi O \\omicron \\Pi \\pi P \\rho \\Sigma \\sigma T \\tau \\Upsilon \\upsilon \\Phi \\phi X \\chi \\Psi \\psi \\Omega \\omega \\varepsilon \\vartheta \\varpi \\varrho \\varsigma \\varphi 多行公式 分类表达式：语法\\begin{cases}…\\end{cases}，用\\\\分类，用&amp;表示需要对其的位置，用\\ + space表示空格。 1234567$$f(n)=\\begin{cases}\\cfrac n2, &amp;if\\ n\\ is\\ even\\\\3n + 1, &amp;if\\ n\\ is\\ odd\\end{cases}$$ 1234567$$L(Y,f(X)) =\\begin{cases}0, &amp; \\text{Y = f(X)} \\\\1, &amp; \\text{Y $\\neq$ f(X)}\\end{cases}$$ 如果想分类之间的垂直间隔变大，可以使用\\\\[2ex]代替\\\\来分隔不同的情况。(3ex,4ex 也可以用，1ex相当于原始距离）。如下所示： 1234567$$L(Y,f(X)) =\\begin{cases}0, &amp; \\text{Y = f(X)} \\\\[5ex]1, &amp; \\text{Y $\\neq$ f(X)}\\end{cases}$$ 多行表达式： 123456789$$\\begin{aligned}\\sqrt{37} &amp; = \\sqrt{\\frac{73^2-1}{12^2}} \\\\ &amp; = \\sqrt{\\frac{73^2}{12^2}\\cdot\\frac{73^2-1}{73^2}} \\\\ &amp; = \\sqrt{\\frac{73^2}{12^2}}\\sqrt{\\frac{73^2-1}{73^2}} \\\\ &amp; = \\frac{73}{12}\\sqrt{1 - \\frac{1}{73^2}} \\\\ &amp; \\approx \\frac{73}{12}\\left(1 - \\frac{1}{2\\cdot73^2}\\right)\\end{aligned}$$ \\[ \\] $$ 1234567$$\\begin{aligned}a&amp;=b+c-d \\\\&amp;=e-f \\\\&amp;=i \\\\\\end{aligned}$$ 方程组： 123456789$$\\left \\{ \\begin{array}{c}a_1x+b_1y+c_1z=d_1 \\\\ a_2x+b_2y+c_2z=d_2 \\\\ a_3x+b_3y+c_3z=d_3\\end{array}\\right.$$ 公式标记与引用 使用\\tag{yourtag}来标记公式，如$$a=x^2-y^3 \\tag{1}$$显示为： 字体 黑板粗字体：此字体经常用来表示代表实数、整数、有理数、复数的大写字母。 ​ $\\mathbb {ABCD}EFGHIJKLMNOPQRSTUVWXYZ$： ​ $\\Bbb {ABCD}EFGHIJKLMNOPQRSTUVWXYZ$： 黑体字： ​ $\\mathbf {ABCD}EFGHIJKLMNOPQRSTUVWXYZ$： ​ $\\mathbf {abcd}efghijklmnopqrstuvwxyz$： 打印机字体： ​ $\\mathtt {ABCD}EFGHIJKLMNOPQRSTUVWXYZ$：` 花体字： ​ $\\mathcal {ABCD}EFGHIJKLMNOPQRSTUVWXYZ$： 其他 符号 语法 \\aleph \\hbar \\imath \\jmath \\ell \\wp \\Re \\Im \\mho \\nabla \\surd \\top \\bot \\neg \\flat \\natural \\sharp \\backslash \\partial \\Box \\clubsuit \\diamondsuit \\heartsuit \\spadesuit 参考链接： MarkDown公式输入 Markdown数学公式语法 markdown公式符号大全","categories":[{"name":"工具","slug":"工具","permalink":"http://example.com/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://example.com/tags/markdown/"}]},{"title":"hexo个人博客搭建","slug":"hexo个人博客搭建","date":"2022-06-30T16:00:00.000Z","updated":"2024-03-01T17:14:35.107Z","comments":true,"path":"2022/07/01/hexo个人博客搭建/","permalink":"http://example.com/2022/07/01/hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/","excerpt":"","text":"本文将详细描述雀栎个人博客的搭建过程，供各位参考。该博客在Windows系统上基于Hexo框架的现成主题Pure和Gitee进行搭建，图床采用阿里云OSS服务和Picgo，优化主题涉及到CSS和ejs文件的修改。 Hexo博客搭建 参考资料：CodeSheep的博客搭建教程 安装node.js 在node.js官网下载node.js安装包，下载之后双击进行安装，一直next即可。 安装成功之后可以在cmd输入node -v查看node.js版本。 输入npm -v查看npm版本。 输入npm install -g cnpm --registry=http://registry.npm.taobao.org安装淘宝的cnpm管理器。 安装成功之后输入cnpm -v查看cnpm版本。 安装hexo 输入cnpm install -g hexo-cli安装hexo框架。 输入hexo -v查看hexo版本。 创建博客文件夹 在合适的路径创建博客文件夹，在这里文件夹名称以Blog为例，可以手动创建也可以输入命令mkdir Blog创建。 创建好之后通过命令cd Blog进入Blog目录，或在Blog目录下打开cmd。 输入hexo init生成并初始化博客。 输入hexo s启动本地博客服务，Ctrl并点击地址 http://localhost:4000/ 可以访问本地博客。 创建博客文章 输入hexo n \"文章名称\"创建新的文章，在 Blog/resource/_post 路径下生成 文章名称. md 文件，可以用vscode等工具进行编辑，Markdown基础语法可以参考Markdown基本语法。 编辑完成后，在Blog路径下输入hexo clean清理。 输入hexo g生成。 输入hexo s再次启动查看，可以看到新建的md文件已被上传。 即每次修改之后可以通过以下命令进行本地效果查看： 123hexo cleanhexo ghexo s 至此，本地hexo博客搭建完成，下面将其部署到Gitee仓库中。 部署Gitee 参考资料：如何从0到1搭建个人博客 因为Gitee经常出现违禁信息且不好排查，后来我把博客迁移到了Github，基本流程类似，且省去了在Gitee Pages更新的流程。 注册Gitee账号 在码云（Gitee）官网注册账号，在个人设置的邮箱管理中添加邮箱地址。 新增邮箱 在个人资料中绑定个人空间地址，该地址即为后期博客访问的地址。 绑定空间地址 新建博客仓库 新建一个仓库用于部署博客，填写内容如下。 开启Gitee Pages服务，该申请认证需要审核，审核时间为一个工作日之内。申请材料：身份证正反面、手持身份证照片。 Gitee Pages 本地配置 在cmd中输入以下命令进行配置。 12git config --global user.name &quot;此处填写你注册时的用户名&quot;git config --global user.email &quot;此处填写你注册时的邮箱&quot; 输入cnpm install --save hexo-deployer-git安装git部署插件。 配置Blog文件夹下的_config.yml文件，将末尾修改为如下内容。 123456# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy: type: git repo: https://gitee.com/skylark1003/skylark1003.git #新建的仓库地址 branch: master #如果创建的时候没有选择分支，默认就是master分支。如果改了，填对应的。 仓库地址可以在此处复制获得。 仓库地址 部署到Gitee主页 在Blog文件夹下输入hexo d将本地博客部署到Github仓库里。 更新Gitee Pages。 更新之后即可通过网站地址 https://skylark1003.gitee.io 进行访问。 即每次修改之后可以通过以下步骤进行部署： 12345hexo cleanhexo ghexo s （本地查看效果）ctrl + C （停止本地运行，关闭4000端口）hexo d （无误后部署到Gitee） 部署后更新Gitee Pages即可访问博客地址。 主题优化 该博客基于作者cofess制作的主题pure。以下流程只针对个人修改内容，其他功能可以参考以下参考资料或自行另外搜索。 参考资料： Hexo博客主题pure使用说明 Hexo / pure 优化记录 Hexo博客主题pure修改记录 Hexo中使用插入数学公式 更换主题 首先在Hexo主题库中寻找自己喜欢的主题，一般会有主题github链接，将其clone到本地（或下载压缩包并解压），将文件夹保存至Blog/themes文件夹下。 并将BLog/_config.yml文件中的themes字段值改为选择的主题文件夹名称。 1theme: hexo-theme-pure-master 再次清理、生成、部署、更新即可生效（以下步骤为每次修改后的常规操作，后面不再赘述）。 12345hexo cleanhexo ghexo s （本地查看效果）ctrl + C （停止本地运行，关闭4000端口）hexo d （无误后部署到Gitee） 以下提供一些个人比较喜欢的hexo主题，供大家参考： hexo-theme-next hexo-theme-aircloud hexo-theme-pure hexo-theme-one-paper 解决导航栏跳转问题 在点击主题左侧导航栏进行跳转时，会出现以下空白的问题： 解决方法： 在Blog/source/文件夹下创建每个导航类别的文件夹，例如categories、tags、links等 在每个文件夹下创建index.md文件 添加以下内容（以categories为例，其他相同） 12345---title: categories # 跳转后显示的标题type: categorieslayout: &quot;categories&quot; # 与主题文件夹中layout下的.ejs文件名称对应--- 优化主题 在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中一份位于站点根目录下Blog/_config.yml，主要包含 Hexo 本身的配置；另一份位于主题目录下Blog/themes/主题名称/_config.yml，这份配置由主题作者提供，主要用于配置主题相关的选项。 为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件。 站点配置文件修改 在站点配置文件中，我只修改了作者和语言。（之前的配置中还修改了主题和deploy部署。） 12author: 雀栎 #作者名称language: zh-CN #语言，中文为zh-CN 主题配置文件修改 基础修改 首先按需安装插件： 12345npm install hexo-wordcount --savenpm install hexo-generator-json-content --savenpm install hexo-generator-feed --savenpm install npm install hexo-generator-sitemap --savenpm install hexo-generator-baidu-sitemap --save 其次对主题配置文件内容进行修改，以下为我的修改内容： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798# menu 导航菜单，把不需要的功能注释掉即可menu: Home: . Archives: archives # 归档 Categories: categories # 分类 Tags: tags # 标签 #Repository: repository # github repositories #Books: books # 豆瓣书单 #Links: links # 友链 About: about # 关于# Sitesite: logo: enabled: true width: 40 height: 40 url: images/logo.png title: 雀栎 # 页面title favicon: images/logo.png # 页面图标路径即浏览器标签页图标 board: &lt;p&gt; &amp;emsp;&amp;emsp; 欢迎来到雀栎的个人小站，期待与各位的交流学习。&lt;/p&gt; # 站点公告位于页面右侧 copyright: true # 底部版权信息# Donate 打赏信息donate: enable: true # 微信打赏 wechatpay: qrcode: images/donate/skylarkwechatpay.png #更换为自己的收款码路径 title: 微信支付 # 支付宝打赏 alipay: qrcode: images/donate/skylarkalipay.jpg #更换为自己的收款码路径 title: 支付宝share: enable: true # 是否启用分享，可以选择性删除添加 sites: weibo,qq,wechat,facebook,twitter # PC端显示的分享图标 mobile_sites: weibo,qq,qzone # 移动端显示的分享图标pv: busuanzi: enable: true # 不蒜子统计 统计访问人数 leancloud: enable: false # leancloud统计 app_id: # leancloud &lt;AppID&gt; app_key: # leancloud &lt;AppKey&gt;postCount: enable: true wordcount: true # 文章字数统计 min2read: true # 阅读时长预计 # profileprofile: enabled: true # Whether to show profile bar articleSelfBlock: false # 关闭文章下方的自我介绍 avatar: images/avatar.jpg #个人头像（页面左上角） gravatar: # Gravatar email address, if you enable Gravatar, your avatar config will be overriden author: 雀栎 #个人昵称 author_title: The skylark soar in the azure sky #昵称下文字 author_description: Mangas | Literature | Coding | Music | Handicraft | Japanese dramas #个人描述 location: Hubei, China #地理位置 follow: https://gitee.com/skylark1003 #点击头像跳转链接 # Social Links social: links: #可根据需要增删改 gitee: https://gitee.com/skylark1003 twitter: https://twitter.com/Skylark_1003 weibo: https://weibo.com/u/3298400311 # facebook: / # dribbble: / #behance: https://www.behance.net/cofess #rss: atom.xml link_tooltip: true # enable the social link tooltip, options: true, false # My Skills skills: #可随意增删改 C++: ★★★☆☆ HTML+CSS: ★★★☆☆ Javascript: ★★★☆☆ # Bootstrap: ★★★☆☆ # ThinkPHP: ★★★☆☆ # 平面设计: ★★★☆☆ # My Personal Links links: #可随意增删改 Mox.moe: https://mox.moe/ 追新番: http://www.fanxinzhui.com/ Z-library: https://zh.usa1lib.org/ 青空文庫: https://www.aozora.gr.jp/ Mikutap: https://aidn.jp/mikutap/ # My Personal Labels labels: #可随意增删改 - 前端 - 前端开发 - 前端重构 - Web前端 - 网页重构 启用目录 主题配置文件中将toc属性值改为true。 1toc: true # 是否开启文章章节目录导航 之后在发布文章时，每篇文章（*.md文件）的开头部分添加以下代码即可。 12345678910---title: Markdown基本语法date: 2022-07-01 11:37:25tags: # 标签 - markdown- 基本语法categories: # 分类- 工具toc: ture # 是否启用目录索引--- 评论系统 我采用的是valine评论系统，首先登录或注册LeanCLoud，进入控制台后点击左下角创建应用： 创建好之后点开该应用，在设置的应用凭证中可以看到AppID和AppKey，接下来将其填写进主题配置文件。 1234567891011121314151617comment: type: valine # 启用哪种评论系统 disqus: # enter disqus shortname here valine: # Valine. https://valine.js.org appid: # your leancloud application appid appkey: # your leancloud application appkey notify: false # mail notifier , https://github.com/xCss/Valine/wiki verify: false # Verification code placeholder: 留下昵称和邮箱，记得保持友善哦。 # comment box placeholder 聊天框默认内容 avatar: mp # gravatar style 头像风格 meta: nick,mail # custom comment header pageSize: 10 # pagination size visitor: false # Article reading statistic https://valine.js.org/visitor.html 其中avatar为评论人的头像风格，具体参数和效果如下： 参数值 表现形式 备注 空字符串'' Gravatar官方图形 mp 神秘人(一个灰白头像) identicon 抽象几何图形 monsterid 小怪物 wavatar 用不同面孔和背景组合生成的头像 retro 八位像素复古头像 robohash 一种具有不同颜色、面部等的机器人 hide 不显示头像 meta为评论者可以输入的信息，nick为昵称，mail为邮箱。 当填入的邮箱在Gravatar已经注册，则显示的头像为注册头像。 代码块复制按钮 ① 增加全局函数addLoadEvent 在/themes/pure/source/js目录下打开application.js，在文件最后追加以下代码： 1234567891011function addLoadEvent(func) &#123; var oldonload = window.onload; if (typeof window.onload != &#x27;function&#x27;) &#123; window.onload = func; &#125; else &#123; window.onload = function() &#123; oldonload(); func(); &#125; &#125;&#125; ② 新增按钮 pure默认情况下是没有代码复制功能的，需要对hexo增加复制代码块功能。在/themes/pure/layout/_partial目录下新增article-copy-code.ejs文件，其代码如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576&lt;% if(theme.codeblock.copy_button.enable)&#123; %&gt; &lt;style&gt; .copy-btn &#123; display: inline-block; padding: 6px 12px; font-size: 13px; font-weight: 500; font-family: 微软雅黑; line-height: 20px; color: #333; white-space: nowrap; vertical-align: middle; cursor: pointer; background-color: #eee; background-image: linear-gradient(#fcfcfc, #eee); border: 1px solid #d5d5d5; border-radius: 3px; user-select: none; outline: 0; &#125; .highlight-wrap .copy-btn &#123; transition: opacity .3s ease-in-out; opacity: 0; padding: 2px 6px; position: absolute; right: 4px; top: 8px; z-index: 2; &#125; .highlight-wrap:hover .copy-btn, .highlight-wrap .copy-btn:focus &#123; opacity: 1 &#125; .highlight-wrap &#123; position: relative; &#125; &lt;/style&gt; &lt;script&gt; addLoadEvent(()=&gt;&#123; $(&#x27;.highlight&#x27;).each(function (i, e) &#123; var $wrap = $(&#x27;&lt;div&gt;&#x27;).addClass(&#x27;highlight-wrap&#x27;) $(e).after($wrap) $wrap.append($(&#x27;&lt;button&gt;&#x27;).addClass(&#x27;copy-btn&#x27;).append(&#x27;&lt;%= __(&quot;codeblock.copy_button&quot;) %&gt;&#x27;).on(&#x27;click&#x27;, function (e) &#123; var code = $(this).parent().find(&quot;.code&quot;)[0].innerText &lt;% if(theme.codeblock.copyright.enable)&#123; %&gt; code += &quot;&lt;%= theme.codeblock.copyright.content %&gt;&quot; &lt;% &#125; %&gt; var ta = document.createElement(&#x27;textarea&#x27;) document.body.appendChild(ta) ta.style.position = &#x27;absolute&#x27; ta.style.top = &#x27;0px&#x27; ta.style.left = &#x27;0px&#x27; ta.value = code ta.select() ta.focus() var result = document.execCommand(&#x27;copy&#x27;) document.body.removeChild(ta) &lt;% if(theme.codeblock.copy_button.result)&#123; %&gt; if(result)$(this).text(&#x27;&lt;%= __(&quot;codeblock.copy_success&quot;) %&gt;&#x27;) else $(this).text(&#x27;&lt;%= __(&quot;codeblock.copy_failure&quot;) %&gt;&#x27;) &lt;% &#125; %&gt; $(this).blur() &#125;)).on(&#x27;mouseleave&#x27;, function (e) &#123; var $b = $(this).find(&#x27;.copy-btn&#x27;) setTimeout(function () &#123; $b.text(&#x27;&lt;%= __(&quot;codeblock.copy_button&quot;) %&gt;&#x27;) &#125;, 300) &#125;).append(e) &#125;) &#125;) &lt;/script&gt;&lt;% &#125; %&gt; ③ 插入到界面 编辑 /themes/pure/layout/layout.ejs，在&lt;/body&gt;前面一行增加&lt;%- partial('_partial/article-copy-code')%&gt;，如下： 123456 &lt;%- body %&gt; &lt;%- partial(&#x27;_common/footer&#x27;, null, &#123;cache: !config.relative_link&#125;) %&gt; &lt;%- partial(&#x27;_common/script&#x27;, &#123;post: page&#125;) %&gt; &lt;%- partial(&#x27;_partial/article-copy-code&#x27;) %&gt;&lt;/body&gt;&lt;/html&gt; 注：理论上可以在其他地方添加，但是必须保证代码在jq以及页面dom加载后运行。 ④ 增加语言文件 在 /themes/pure/languages目录下选择对应的语言文件，在文件后面增加如下代码： 1234codeblock: copy_button: 复制 copy_success: 复制成功 copy_failure: 复制失败 注：理论上只需添加当前语言文件即可，但是为了以后方便切换语音，建议所有语音文件都加上相应的配置。 ⑤ 增加主题配置文件 在主题配置文件末尾添加如下代码： 1234567codeblock: copy_button: enable: true result: true copyright: enable: true content: \\n/**\\n* 感谢您复制代码，使用代码请注明引用出处\\n* 雀栎 @ https://skylark1003.gitee.io/\\n*/ 移动到顶端按钮 2024.03.01注：该按钮存在问题，移动到顶端后页面会强制保留在顶端。因此新版博客中未添加改按钮。 在 **/themes/pure/layout/_common/script.ejs增加如下代码： 1&lt;%- partial(&#x27;_script/go-top&#x27;) %&gt; 在 /themes/pure/layout/_script目录新增go-top.ejs**文件，其内容为： 1&lt;div id=&quot;go-top&quot;&gt;&lt;/div&gt;&lt;style type=&quot;text/css&quot;&gt;#go-top &#123;width:40px;height:36px;background-color:#303030;position:relative;border-radius:2px;position:fixed;right:10px;bottom:60px;cursor:pointer;display:none&#125; #go-top:after &#123;content:&quot; &quot;;position:absolute;left:14px;top:14px;border-top:2px solid white;border-right:2px solid white;width:12px;height:12px;transform:rotate(-45deg)&#125;#go-top:hover &#123;background-color:#303030&#125;&lt;/style&gt;&lt;script&gt;$(function() &#123; var o = $(&quot;#go-top&quot;);$(window).scroll(function() &#123; 300 &lt; $(window).scrollTop() ? o.show(300) : o.hide(200), $(&quot;#go-top&quot;).click(function() &#123; return $(&quot;body,html&quot;).animate(&#123; scrollTop: 0 &#125;) &#125;) &#125;) &#125;)&lt;/script&gt; 可以修改其中的按钮的颜色。 背景动画 背景动画基于canvas，在 .ejs的 中面添加以下代码，由于我认为有些花哨所以没有添加，具体颜色数量等配置可以参考作者仓库的README。 1&lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt; 由于我对JavaScript语言知之甚少，所以对于主页的其他板块基本未进行修改，上述内容也均来自提到的参考资料，大家有需要的话可以对layout中的ejs文件和source中的js文件进行进一步优化修改。 CSS修改 该部分主要对主页的样式进行修改，例如文字的字体、大小、颜色，板块间的间隔（padding）、按钮的颜色等，需要掌握基础的css语法。 主要流程是在浏览器中打开主页并右击-&gt;检查，通过这种方式定位某部分样式在css文件代码中的位置，可以先在浏览器中修改预览效果，后在themes/pure/source/css/style.css文件中进行修改。 修改css文件 我主要修改了左侧name、title、nav的字体，下方打赏按钮的字体和背景颜色以及代码段的字体。 另外该主题的六级标题显示存在一点问题，虽然规定了其大小（如图），但h1和h2未生效，导致二级标题的字体大小比三级标题要小。 解决方法是将如图所示的两个font-size注释掉即可。 img img 如有其他需要的可自行修改。 添加对数学公式的支持 安装hexo-math 安装hexo-math插件：npm install hexo-math --save 安装渲染工具：npm install hexo-renderer-pandoc --save 修改站点配置文件 在站点配置文件（config.yml）中添加： 1234567mathjax: tags: none # or &#x27;ams&#x27; or &#x27;all&#x27; single_dollars: true # enable single dollar signs as in-line math delimiters cjk_width: 0.9 # relative CJK char width normal_width: 0.6 # relative normal (monospace) width append_css: true # add CSS to pages rendered by MathJax every_page: false # if true, every page will be rendered by MathJax regardless the `mathjax` setting in Front-matter 修改主题配置文件 在主题配置文件（config.yml）中添加： 123math: per_page: true mathjax: true 其中 per_page 根据提示，表示默认不加载 mathjax/katex 脚本，如果设置为 false，则是每篇文章都会去加载 mathjax 脚本，该处设置为false，如果不加载，则需要加载的文章抬头添加 mathjax: false 。 公式可以通过Latex语法规则编辑，同时也可以通过Writage插件，将Word中编辑好的公式，转化成markdown格式后使用。 2024.03.01更新：如果出现安装失败，可以换一个新的npm源：npm config set registry https://registry.npmmirror.com 添加公式后表格表头渲染异常 原因：在于表格的表头使用到了重复的 header 样式类，而这个样式类原计划仅使用于博客的顶部 Header，这个问题源于未能使用样式隔离。 解决：根据我浅显的理解，如果找到表格表头tr的定义，去掉其“header”选择器即可，但我没有找到，所以我采用了最笨的办法，将博客顶部Header重命名为了aheader（路径为pure/layout/_commom/header.ejs），并将CSS文件中所有.header均改为了.aheader。 搭建图床 写博客不可避免地需要一个稳定的图床，用于存放图片。由于github需要科学上网，在其他设备显示可能存在问题，gitee由于开源需要审核，用作图床会导致无法开源，且上传图片有2MB的大小限制，所以最终选择了阿里云OSS搭配PicGo进行搭建。 阿里云OSS 购买阿里云OSS 在阿里云对象存储OSS页面点击折扣套餐，选择所需服务，我买了三年的，总共27元，直接用支付宝账号登录即可。 创建Bucket 在产品与服务中找到对象存储OSS服务，点击创建Bucket，读写权限选择公共读。 img 创建AccessKey 在管理AccessKey中点击创建AccessKey，即可获得AccessKey ID和AccessKey Secret。 PicGo 在PicGo仓库进行下载，安装好后打开。 在图床设置中选择阿里云OSS，填写相应信息，确定并设置为默认。 另外还可以在PicGo设置中选择是否上传前重命名。 配置完之后就可以使用了，在上传区可以通过拖拽或点击上传图片，上传后自动复制url至剪贴板，在相册中可以对图片进行操作。 以上就是我搭建个人博客的全部流程了，记录下来供大家参考，如果有任何疑问或错误欢迎大家交流学习和批评指正。 2024.03.01更新： ​ 由于之前电脑重装系统，本地文件夹的内容没有备份，只有Github上留存的静态网页，导致博客废止了很长时间，今天总算重新搭建起来了。只是可惜因为时间成本太高，所以只保留了几篇之前的文章，大量的leetcode笔记全部舍弃了，真是令人心痛，但好在那些内容琐碎并没有很高的复看价值。 ​ 这次一定好好备份！Blog，堂堂复活！","categories":[{"name":"工具","slug":"工具","permalink":"http://example.com/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"},{"name":"博客搭建","slug":"博客搭建","permalink":"http://example.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}]}],"categories":[{"name":"实例","slug":"实例","permalink":"http://example.com/categories/%E5%AE%9E%E4%BE%8B/"},{"name":"工具","slug":"工具","permalink":"http://example.com/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"PyQt5","slug":"PyQt5","permalink":"http://example.com/tags/PyQt5/"},{"name":"ChatGPT","slug":"ChatGPT","permalink":"http://example.com/tags/ChatGPT/"},{"name":"VSCode","slug":"VSCode","permalink":"http://example.com/tags/VSCode/"},{"name":"AutoDL","slug":"AutoDL","permalink":"http://example.com/tags/AutoDL/"},{"name":"markdown","slug":"markdown","permalink":"http://example.com/tags/markdown/"},{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"},{"name":"博客搭建","slug":"博客搭建","permalink":"http://example.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}]}